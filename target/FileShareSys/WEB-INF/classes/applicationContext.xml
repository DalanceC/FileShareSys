<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    <!--扫描业务逻辑组件，除了控制器，其他的都要-->
    <context:component-scan base-package="com.hhit">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--Spring的配置文件，主要配置和业务逻辑有关的 数据源，事务控制...-->

    <!--数据源配置start-->
        <!--创数据源-->
        <!--引入数据源配置文件-->
        <context:property-placeholder location="classpath:dbconfig.properties"/>
        <!--注入数据源-->
        <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
            <property name="driverClass" value="${jdbc.driverClass}"></property>
            <property name="user" value="${jdbc.user}"></property>
            <property name="password" value="${jdbc.password}"></property>
        </bean>
    <!--数据源配置end-->


    <!--MyBatis配置start-->
        <!--配置和MyBatis的整合-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <!--指定mybatis全局配置文件的位置-->
            <property name="configLocation" value="classpath:mybatis-config.xml"></property>
            <!--指定数据源-->
            <property name="dataSource" ref="pooledDataSource"></property>
            <!--指定mybatis.mapper文件的位置-->
            <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        </bean>

        <!--配置扫描器，将mybatis接口的实现加入到ioc容器中-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <!--扫描所有dao接口的实现，加入到ioc容器中-->
            <property name="basePackage" value="com.hhit.dao"></property>
        </bean>

        <!--配置一个可以批量操作的sqlSession-->
        <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
            <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
            <constructor-arg name="executorType" value="BATCH"></constructor-arg>
        </bean>
    <!--MyBatis配置end-->

    <!--事务控制配置start-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <!--控制住事务源-->
            <property name="dataSource" ref="pooledDataSource"></property>
        </bean>

        <!--开启基于注解的事务，使用xml配置形式的事务(必要的主要的都是使用配置式)-->
        <aop:config>
            <!--切入点表达式 com.hhit.service包下的所有类的所有方法-->
            <aop:pointcut id="txPoint" expression="execution(* com.hhit.service..*(..))"/>
            <!--配置事务增强-->
            <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
        </aop:config>

        <!--配置事务增强，也就是事务如何切入-->
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <!--切入点切入的所有方法都是事务方法-->
                <tx:method name="*"/>
                <!--以get开始的所有方法-->
                <tx:method name="get*" read-only="true"/>
            </tx:attributes>
        </tx:advice>
    <!--事务控制配置end-->

    <!--Spring配置文件的核心点(数据源、与mybatis的整合、事务控制)-->

</beans>