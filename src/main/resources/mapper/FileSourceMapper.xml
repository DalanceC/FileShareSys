<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhit.dao.FileSourceMapper">
  <resultMap id="BaseResultMap" type="com.hhit.bean.FileSource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="file_id" jdbcType="VARCHAR" property="fileId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="upload_time" jdbcType="VARCHAR" property="uploadTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>

  <!--带用户的视图编写start-->
  <resultMap id="WithMemberResultMap" type="com.hhit.bean.FileSource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="file_id" jdbcType="VARCHAR" property="fileId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="upload_time" jdbcType="VARCHAR" property="uploadTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <association property="member" javaType="com.hhit.bean.Member">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="member_id" jdbcType="VARCHAR" property="memberId" />
      <result column="member_name" jdbcType="VARCHAR" property="memberName" />
      <result column="member_password" jdbcType="VARCHAR" property="memberPassword" />
      <result column="true_name" jdbcType="VARCHAR" property="trueName" />
      <result column="sex" jdbcType="VARCHAR" property="sex" />
      <result column="email" jdbcType="VARCHAR" property="email" />
      <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    </association>
  </resultMap>
  <!--带用户的视图编写end-->

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, file_id, type, file_path, file_name, member_id, upload_time, description
  </sql>

  <!--带用户的查询字段编写start-->
  <sql id="WithMember_Column_List">
    f.id, f.file_id, f.type, f.file_path, f.file_name, f.member_id, f.upload_time, f.description,
    m.id, m.member_id, m.member_name, m.member_password, m.true_name, m.sex, m.email, m.head_img
  </sql>
  <!--带用户的查询字段编写end-->

  <!--带用户的查询方法编写start-->
  <select id="selectByExampleWithMember" resultMap="WithMemberResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithMember_Column_List" />
    from tbl_file f
    left join tbl_member m
    on f.member_id=m.member_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithMember" parameterType="java.lang.Integer" resultMap="WithMemberResultMap">
    select
    <include refid="WithMember_Column_List" />
    from tbl_file f
    left join tbl_member m
    on f.member_id=m.member_id
    where f.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleWithMemberByMemberId" parameterType="java.lang.String" resultMap="WithMemberResultMap">
    select
    <include refid="WithMember_Column_List" />
    from tbl_file f
    left join tbl_member m
    on f.member_id=m.member_id
    where m.member_id = #{memberId}
  </select>

  <!--带用户的查询方法编写end-->

  <!--文件搜索-->
  <select id="getAllWithCondition" resultMap="WithMemberResultMap">
    select
    <include refid="WithMember_Column_List" />
    from tbl_file f
    left join tbl_member m
    on f.member_id=m.member_id
    where file_name like CONCAT('%',#{condition},'%')
  </select>

  <select id="selectByExample" parameterType="com.hhit.bean.FileSourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hhit.bean.FileSourceExample">
    delete from tbl_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hhit.bean.FileSource">
    insert into tbl_file (id, file_id, type, 
      file_path, file_name, member_id, 
      upload_time, description)
    values (#{id,jdbcType=INTEGER}, #{fileId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{filePath,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, 
      #{uploadTime,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hhit.bean.FileSource">
    insert into tbl_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hhit.bean.FileSourceExample" resultType="java.lang.Long">
    select count(*) from tbl_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_file
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null">
        upload_time = #{record.uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_file
    set id = #{record.id,jdbcType=INTEGER},
      file_id = #{record.fileId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hhit.bean.FileSource">
    update tbl_file
    <set>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hhit.bean.FileSource">
    update tbl_file
    set file_id = #{fileId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>